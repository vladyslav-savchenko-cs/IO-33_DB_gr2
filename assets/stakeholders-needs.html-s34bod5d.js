import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as s,o,c as d,a as t,d as l,e as r}from"./app-Csqce1BA.js";const a={},g=r('<h1 id="запити-зацікавлених-осіб" tabindex="-1"><a class="header-anchor" href="#запити-зацікавлених-осіб"><span>Запити зацікавлених осіб</span></a></h1><h2 id="вступ" tabindex="-1"><a class="header-anchor" href="#вступ"><span>Вступ</span></a></h2><p>Система управління відкритими даними – це програмне рішення, що забезпечує ефективне керування, доступ до публічної інформації та її безпечне зберігання. Цей документ репрезентує загальні принципи функціонування системи, її ключові можливості та вимоги до безпеки, адміністрування та взаємодії користувачів.</p><h3 id="мета" tabindex="-1"><a class="header-anchor" href="#мета"><span>Мета</span></a></h3><p>Визначити основні функціональні вимоги, сформулювати критерії елементів системи й забезпечити базу для подальшої розробки. Описати ключові можливості користувачів та адміністраторів.</p><h3 id="контекст" tabindex="-1"><a class="header-anchor" href="#контекст"><span>Контекст</span></a></h3><p>Цей документ містить узагальнену інформацію про систему управління відкритими даними, її призначення та функціональність, що стане основою для подальшого технічного проєктування та реалізації.</p><h3 id="основні-визначення-та-скорочення" tabindex="-1"><a class="header-anchor" href="#основні-визначення-та-скорочення"><span>Основні визначення та скорочення</span></a></h3><p><strong>Адміністра́тор</strong><a href="#link1">[1]</a> - це особа, яка здійснює роботу з якісного і ефективного обслуговування відвідувачів, консультує їх із питань, які стосуються товарів і послуг, які надає підприємство, організація.</p><p><strong>Користувач</strong><a href="#link2">[2]</a> - суб&#39;єкт, що звертається до інформаційної системи або посередника за одержанням потрібної йому інформації, щоб користуватися нею.</p><p><strong>Обліковий запис</strong><a href="#link3">[3]</a> - сукупність наданої інформації про користувача, засобів та прав користувача відносно багатокористувацької системи.</p><p><strong>Інформаційна система</strong><a href="#link4">[4]</a> - сукупність організаційних і технічних засобів для збереження та обробки інформації з метою забезпечення інформаційних потреб користувачів.</p><p><strong>Набір даних</strong><a href="#link5">[5]</a> - колекція однотипних даних, що застосовується в задачах машинної обробки даних.</p><p><strong>FURPS</strong><a href="#link6">[6]</a> - класифікація вимог до програмних систем:</p><ul><li><strong>F</strong>unctionality - Функціональні вимоги: властивості, можливості, безпека. Основними з них, відповідно до цих вимог, є діаграми випадків використання ( Використовуйте діаграму випадків );</li><li><strong>U</strong>sability - Вимоги до використання ( UX ): людський фактор, естетика, послідовність, документація;</li><li><strong>R</strong>eliability - Вимоги до надійності: частота можливих відмов, допущення несправностей, відновлення, передбачуваність стабільності;</li><li><strong>P</strong>erformance - Вимоги до продуктивності: час відгуку, використання ресурсів, ефективність, потужність, масштабованість;</li><li><strong>S</strong>upportability - Вимоги до підтримки: підтримка, ремонтопридатність, гнучкість, модифікація, модальність, розширюваність, можливість локалізації.</li></ul><h3 id="посилання" tabindex="-1"><a class="header-anchor" href="#посилання"><span>Посилання</span></a></h3>',16),i=t("a",{name:"link1"},null,-1),h={href:"https://uk.wikipedia.org/wiki/%D0%90%D0%B4%D0%BC%D1%96%D0%BD%D1%96%D1%81%D1%82%D1%80%D0%B0%D1%82%D0%BE%D1%80",target:"_blank",rel:"noopener noreferrer"},y=t("em",null,"Адміністратор",-1),f=t("a",{name:"link2"},null,-1),p={href:"https://uk.wikipedia.org/wiki/%D0%9A%D0%BE%D1%80%D0%B8%D1%81%D1%82%D1%83%D0%B2%D0%B0%D1%87",target:"_blank",rel:"noopener noreferrer"},D=t("em",null,"Користувач",-1),x=t("a",{name:"link3"},null,-1),c={href:"https://uk.wikipedia.org/wiki/%D0%9E%D0%B1%D0%BB%D1%96%D0%BA%D0%BE%D0%B2%D0%B8%D0%B9_%D0%B7%D0%B0%D0%BF%D0%B8%D1%81",target:"_blank",rel:"noopener noreferrer"},b=t("em",null,"Обліковий запис",-1),u=t("a",{name:"link4"},null,-1),B={href:"https://uk.wikipedia.org/wiki/%D0%86%D0%BD%D1%84%D0%BE%D1%80%D0%BC%D0%B0%D1%86%D1%96%D0%B9%D0%BD%D0%B0_%D1%81%D0%B8%D1%81%D1%82%D0%B5%D0%BC%D0%B0",target:"_blank",rel:"noopener noreferrer"},m=t("em",null,"Інформаційна система",-1),k=t("a",{name:"link5"},null,-1),_={href:"https://uk.wikipedia.org/wiki/%D0%9D%D0%B0%D0%B1%D1%96%D1%80_%D0%B4%D0%B0%D0%BD%D0%B8%D1%85",target:"_blank",rel:"noopener noreferrer"},E=t("em",null,"Набір даних",-1),v=t("a",{name:"link6"},null,-1),A={href:"https://en.wikipedia.org/wiki/FURPS",target:"_blank",rel:"noopener noreferrer"},I=t("em",null,"FURPS",-1),P=r('<h2 id="короткии-зміст" tabindex="-1"><a class="header-anchor" href="#короткии-зміст"><span>Короткий зміст</span></a></h2><p><a href="#%D1%85%D0%B0%D1%80%D0%B0%D0%BA%D1%82%D0%B5%D1%80%D0%B8%D1%81%D1%82%D0%B8%D0%BA%D0%B0-%D0%B4%D1%96%D0%BB%D0%BE%D0%B2%D0%B8%D1%85-%D0%BF%D1%80%D0%BE%D1%86%D0%B5%D1%81%D1%96%D0%B2">Характеристика ділових процесів</a></p><p><a href="#%D0%BA%D0%BE%D1%80%D0%BE%D1%82%D0%BA%D0%B8%D0%B8-%D0%BE%D0%B3%D0%BB%D1%8F%D0%B4-%D0%BF%D1%80%D0%BE%D0%B4%D1%83%D0%BA%D1%82%D1%83">Короткий огляд продукту</a></p><p><a href="#%D1%84%D1%83%D0%BD%D0%BA%D1%86%D1%96%D0%BE%D0%BD%D0%B0%D0%BB%D1%8C%D0%BD%D1%96%D1%81%D1%82%D1%8C">Функціональність</a></p><p><a href="#%D0%BF%D1%80%D0%B0%D0%BA%D1%82%D0%B8%D1%87%D0%BD%D1%96%D1%81%D1%82%D1%8C">Практичність</a></p><p><a href="#%D0%BD%D0%B0%D0%B4%D1%96%D0%B8%D0%BD%D1%96%D1%81%D1%82%D1%8C">Надійність</a></p><p><a href="#%D0%BF%D1%80%D0%BE%D0%B4%D1%83%D0%BA%D1%82%D0%B8%D0%B2%D0%BD%D1%96%D1%81%D1%82%D1%8C">Продуктивність</a></p><p><a href="#%D0%B5%D0%BA%D1%81%D0%BF%D0%BB%D1%83%D0%B0%D1%82%D0%B0%D1%86%D1%96%D0%B8%D0%BD%D0%B0-%D0%BF%D1%80%D0%B8%D0%B4%D0%B0%D1%82%D0%BD%D1%96%D1%81%D1%82%D1%8C">Експлуатаційна придатність</a></p><h2 id="характеристика-ділових-процесів" tabindex="-1"><a class="header-anchor" href="#характеристика-ділових-процесів"><span>Характеристика ділових процесів</span></a></h2><h3 id="гість" tabindex="-1"><a class="header-anchor" href="#гість"><span>Гість</span></a></h3><table><thead><tr><th style="text-align:left;"><strong>ID:</strong></th><th style="text-align:left;"><strong>RegisterUser</strong></th></tr></thead><tbody><tr><td style="text-align:left;"><strong>НАЗВА:</strong></td><td style="text-align:left;">Реєстрація нового користувача</td></tr><tr><td style="text-align:left;"><strong>УЧАСНИКИ:</strong></td><td style="text-align:left;">Гість, Система</td></tr><tr><td style="text-align:left;"><strong>ПЕРЕДУМОВИ:</strong></td><td style="text-align:left;">Гість відкрив сторінку реєстрації</td></tr><tr><td style="text-align:left;"><strong>РЕЗУЛЬТАТ:</strong></td><td style="text-align:left;">Гість отримує обліковий запис у системі</td></tr><tr><td style="text-align:left;"><strong>ВИКЛЮЧНІ СИТУАЦІЇ:</strong></td><td style="text-align:left;"><strong>UsernameExists</strong> – Користувач із таким іменем вже існує <br> <strong>ValidationError</strong> – Некоректні дані (відсутній логін або пароль)</td></tr><tr><td style="text-align:left;"><strong>ОСНОВНИЙ СЦЕНАРІЙ:</strong></td><td style="text-align:left;">1. Гість відкриває сторінку реєстрації. <br> 2. Вводить ім&#39;я користувача та пароль. <br> 3. Система надсилає запит <code>POST /api/auth/register</code>. <br> 4. Система хешує пароль і зберігає нового користувача в базі. <br> 5. Система повертає підтвердження про успішну реєстрацію. <br> 6. Гість отримує можливість увійти в систему.</td></tr></tbody></table><table><thead><tr><th style="text-align:left;"><strong>ID:</strong></th><th style="text-align:left;"><strong>ViewPosts</strong></th></tr></thead><tbody><tr><td style="text-align:left;"><strong>НАЗВА:</strong></td><td style="text-align:left;">Перегляд списку постів</td></tr><tr><td style="text-align:left;"><strong>УЧАСНИКИ:</strong></td><td style="text-align:left;">Гість, Система</td></tr><tr><td style="text-align:left;"><strong>ПЕРЕДУМОВИ:</strong></td><td style="text-align:left;">Гість відкрив вебсайт</td></tr><tr><td style="text-align:left;"><strong>РЕЗУЛЬТАТ:</strong></td><td style="text-align:left;">Гість отримує список постів</td></tr><tr><td style="text-align:left;"><strong>ВИКЛЮЧНІ СИТУАЦІЇ:</strong></td><td style="text-align:left;"><strong>PostsNotAvailable</strong> – В системі немає постів</td></tr><tr><td style="text-align:left;"><strong>ОСНОВНИЙ СЦЕНАРІЙ:</strong></td><td style="text-align:left;">1. Гість заходить на вебсайт. <br> 2. Система надсилає запит <code>GET /api/post</code> для отримання всіх постів. <br> 3. Система повертає список постів (або повідомляє про їх відсутність). <br> 4. Гість переглядає список постів.</td></tr></tbody></table><table><thead><tr><th style="text-align:left;"><strong>ID:</strong></th><th style="text-align:left;"><strong>ViewPostById</strong></th></tr></thead><tbody><tr><td style="text-align:left;"><strong>НАЗВА:</strong></td><td style="text-align:left;">Перегляд конкретного поста</td></tr><tr><td style="text-align:left;"><strong>УЧАСНИКИ:</strong></td><td style="text-align:left;">Гість, Система</td></tr><tr><td style="text-align:left;"><strong>ПЕРЕДУМОВИ:</strong></td><td style="text-align:left;">Гість відкрив сторінку конкретного поста</td></tr><tr><td style="text-align:left;"><strong>РЕЗУЛЬТАТ:</strong></td><td style="text-align:left;">Гість отримує інформацію про конкретний пост</td></tr><tr><td style="text-align:left;"><strong>ВИКЛЮЧНІ СИТУАЦІЇ:</strong></td><td style="text-align:left;"><strong>PostNotFound</strong> – Пост із вказаним <code>id</code> не знайдено</td></tr><tr><td style="text-align:left;"><strong>ОСНОВНИЙ СЦЕНАРІЙ:</strong></td><td style="text-align:left;">1. Гість відкриває сторінку конкретного поста. <br> 2. Система надсилає запит <code>GET /api/post/:id</code> для отримання даних поста. <br> 3. Система повертає інформацію про пост (або повідомляє про його відсутність). <br> 4. Гість переглядає пост.</td></tr></tbody></table><h3 id="користувач" tabindex="-1"><a class="header-anchor" href="#користувач"><span>Користувач</span></a></h3><table><thead><tr><th style="text-align:left;"><strong>ID:</strong></th><th style="text-align:left;"><strong>LoginUser</strong></th></tr></thead><tbody><tr><td style="text-align:left;"><strong>НАЗВА:</strong></td><td style="text-align:left;">Вхід у систему</td></tr><tr><td style="text-align:left;"><strong>УЧАСНИКИ:</strong></td><td style="text-align:left;">Користувач, Система</td></tr><tr><td style="text-align:left;"><strong>ПЕРЕДУМОВИ:</strong></td><td style="text-align:left;">Користувач має обліковий запис</td></tr><tr><td style="text-align:left;"><strong>РЕЗУЛЬТАТ:</strong></td><td style="text-align:left;">Користувач отримує токен для доступу до системи</td></tr><tr><td style="text-align:left;"><strong>ВИКЛЮЧНІ СИТУАЦІЇ:</strong></td><td style="text-align:left;"><strong>InvalidCredentials</strong> – Неправильний логін або пароль</td></tr><tr><td style="text-align:left;"><strong>ОСНОВНИЙ СЦЕНАРІЙ:</strong></td><td style="text-align:left;">1. Користувач відкриває сторінку авторизації. <br> 2. Вводить логін і пароль. <br> 3. Система надсилає запит <code>POST /api/auth/login</code>. <br> 4. Система перевіряє правильність введених даних. <br> 5. Якщо дані вірні, система генерує токен і відправляє його користувачеві. <br> 6. Користувач отримує доступ до захищених функцій.</td></tr></tbody></table><table><thead><tr><th style="text-align:left;"><strong>ID:</strong></th><th style="text-align:left;"><strong>LogoutUser</strong></th></tr></thead><tbody><tr><td style="text-align:left;"><strong>НАЗВА:</strong></td><td style="text-align:left;">Вихід із системи</td></tr><tr><td style="text-align:left;"><strong>УЧАСНИКИ:</strong></td><td style="text-align:left;">Користувач, Система</td></tr><tr><td style="text-align:left;"><strong>ПЕРЕДУМОВИ:</strong></td><td style="text-align:left;">Користувач автентифікований, токен збережено на пристрої користувача (наприклад у браузері)</td></tr><tr><td style="text-align:left;"><strong>РЕЗУЛЬТАТ:</strong></td><td style="text-align:left;">Токен видалено з пристрою користувача</td></tr><tr><td style="text-align:left;"><strong>ВИКЛЮЧНІ СИТУАЦІЇ:</strong></td><td style="text-align:left;"><strong>TokenNotFound</strong> – токен не знайдено у сховищі</td></tr><tr><td style="text-align:left;"><strong>ОСНОВНИЙ СЦЕНАРІЙ:</strong></td><td style="text-align:left;">1. Користувач натискає кнопку &quot;Вийти&quot;. <br> 2. Токен авторизації видаляється з пристрою користувача. <br> 3. Інтерфейс застосунку оновлюється: користувача перенаправляють на сторінку входу або показують гостьовий режим.</td></tr></tbody></table><table><thead><tr><th style="text-align:left;"><strong>ID:</strong></th><th style="text-align:left;"><strong>CreatePost</strong></th></tr></thead><tbody><tr><td style="text-align:left;"><strong>НАЗВА:</strong></td><td style="text-align:left;">Створення нового поста</td></tr><tr><td style="text-align:left;"><strong>УЧАСНИКИ:</strong></td><td style="text-align:left;">Користувач, Система</td></tr><tr><td style="text-align:left;"><strong>ПЕРЕДУМОВИ:</strong></td><td style="text-align:left;">Користувач авторизований у системі</td></tr><tr><td style="text-align:left;"><strong>РЕЗУЛЬТАТ:</strong></td><td style="text-align:left;">Новий пост створено та збережено у базі даних</td></tr><tr><td style="text-align:left;"><strong>ВИКЛЮЧНІ СИТУАЦІЇ:</strong></td><td style="text-align:left;"><strong>NotAuthenticated</strong> – Користувач не авторизований <br> <strong>ValidationError</strong> – Відсутні заголовок або зміст поста</td></tr><tr><td style="text-align:left;"><strong>ОСНОВНИЙ СЦЕНАРІЙ:</strong></td><td style="text-align:left;">1. Користувач натискає кнопку &quot;Створити пост&quot;. <br> 2. Користувач вводить заголовок і зміст поста. <br> 3. Система надсилає запит <code>POST /api/post</code> з даними поста. <br> 4. Система перевіряє, що користувач авторизований. <br> 5. Система зберігає пост у базі даних і повертає підтвердження. <br> 6. Користувач отримує повідомлення про успішне створення поста.</td></tr></tbody></table><table><thead><tr><th style="text-align:left;"><strong>ID:</strong></th><th style="text-align:left;"><strong>EditOwnPost</strong></th></tr></thead><tbody><tr><td style="text-align:left;"><strong>НАЗВА:</strong></td><td style="text-align:left;">Редагування власного поста</td></tr><tr><td style="text-align:left;"><strong>УЧАСНИКИ:</strong></td><td style="text-align:left;">Користувач (автор поста), Система</td></tr><tr><td style="text-align:left;"><strong>ПЕРЕДУМОВИ:</strong></td><td style="text-align:left;">Користувач авторизований і є автором поста</td></tr><tr><td style="text-align:left;"><strong>РЕЗУЛЬТАТ:</strong></td><td style="text-align:left;">Пост оновлено в базі даних</td></tr><tr><td style="text-align:left;"><strong>ВИКЛЮЧНІ СИТУАЦІЇ:</strong></td><td style="text-align:left;"><strong>NotAuthenticated</strong> – Користувач не авторизований <br> <strong>PostNotFound</strong> – Пост із вказаним <code>id</code> не знайдено <br> <strong>NotAuthorized</strong> – Користувач не є автором поста</td></tr><tr><td style="text-align:left;"><strong>ОСНОВНИЙ СЦЕНАРІЙ:</strong></td><td style="text-align:left;">1. Користувач відкриває форму редагування свого поста. <br> 2. Система перевіряє, що користувач авторизований і є автором поста. <br> 3. Користувач змінює заголовок або зміст поста. <br> 4. Система надсилає запит <code>PUT /api/post/:id</code> з оновленими даними. <br> 5. Система оновлює дані поста у базі та повертає підтвердження. <br> 6. Користувач отримує повідомлення про успішне оновлення поста.</td></tr></tbody></table><table><thead><tr><th style="text-align:left;"><strong>ID:</strong></th><th style="text-align:left;"><strong>DeleteOwnPost</strong></th></tr></thead><tbody><tr><td style="text-align:left;"><strong>НАЗВА:</strong></td><td style="text-align:left;">Видалення власного поста</td></tr><tr><td style="text-align:left;"><strong>УЧАСНИКИ:</strong></td><td style="text-align:left;">Користувач (автор поста), Система</td></tr><tr><td style="text-align:left;"><strong>ПЕРЕДУМОВИ:</strong></td><td style="text-align:left;">Користувач авторизований і є автором поста</td></tr><tr><td style="text-align:left;"><strong>РЕЗУЛЬТАТ:</strong></td><td style="text-align:left;">Пост видалено з бази даних</td></tr><tr><td style="text-align:left;"><strong>ВИКЛЮЧНІ СИТУАЦІЇ:</strong></td><td style="text-align:left;"><strong>NotAuthenticated</strong> – Користувач не авторизований <br> <strong>PostNotFound</strong> – Пост із вказаним <code>id</code> не знайдено <br> <strong>NotAuthorized</strong> – Користувач не має прав на видалення поста</td></tr><tr><td style="text-align:left;"><strong>ОСНОВНИЙ СЦЕНАРІЙ:</strong></td><td style="text-align:left;">1. Користувач натискає кнопку &quot;Видалити пост&quot;. <br> 2. Система перевіряє, що користувач авторизований і є автором поста. <br> 3. Система надсилає запит <code>DELETE /api/post/:id</code> для видалення поста. <br> 4. Система видаляє пост із бази даних і повертає підтвердження. <br> 5. Користувач отримує повідомлення про успішне видалення поста.</td></tr></tbody></table><table><thead><tr><th style="text-align:left;"><strong>ID:</strong></th><th style="text-align:left;"><strong>ViewUsers</strong></th></tr></thead><tbody><tr><td style="text-align:left;"><strong>НАЗВА:</strong></td><td style="text-align:left;">Перегляд списку користувачів</td></tr><tr><td style="text-align:left;"><strong>УЧАСНИКИ:</strong></td><td style="text-align:left;">Користувач, Система</td></tr><tr><td style="text-align:left;"><strong>ПЕРЕДУМОВИ:</strong></td><td style="text-align:left;">Користувач авторизований</td></tr><tr><td style="text-align:left;"><strong>РЕЗУЛЬТАТ:</strong></td><td style="text-align:left;">Користувач отримує список зареєстрованих користувачів</td></tr><tr><td style="text-align:left;"><strong>ВИКЛЮЧНІ СИТУАЦІЇ:</strong></td><td style="text-align:left;"><strong>UsersNotAvailable</strong> – У базі немає користувачів</td></tr><tr><td style="text-align:left;"><strong>ОСНОВНИЙ СЦЕНАРІЙ:</strong></td><td style="text-align:left;">1. Користувач відкриває сторінку списку користувачів. <br> 2. Система надсилає запит <code>GET /api/user</code>. <br> 3. Система повертає список користувачів або повідомлення про їх відсутність. <br> 4. Користувач переглядає список.</td></tr></tbody></table><table><thead><tr><th style="text-align:left;"><strong>ID:</strong></th><th style="text-align:left;"><strong>ViewUserById</strong></th></tr></thead><tbody><tr><td style="text-align:left;"><strong>НАЗВА:</strong></td><td style="text-align:left;">Перегляд конкретного користувача (в тому числі і свого профілю)</td></tr><tr><td style="text-align:left;"><strong>УЧАСНИКИ:</strong></td><td style="text-align:left;">Користувач, Система</td></tr><tr><td style="text-align:left;"><strong>ПЕРЕДУМОВИ:</strong></td><td style="text-align:left;">Користувач відкрив сторінку конкретного користувача</td></tr><tr><td style="text-align:left;"><strong>РЕЗУЛЬТАТ:</strong></td><td style="text-align:left;">Користувач отримує інформацію про конкретного користувача</td></tr><tr><td style="text-align:left;"><strong>ВИКЛЮЧНІ СИТУАЦІЇ:</strong></td><td style="text-align:left;"><strong>UserNotFound</strong> – Користувача із вказаним <code>id</code> не знайдено</td></tr><tr><td style="text-align:left;"><strong>ОСНОВНИЙ СЦЕНАРІЙ:</strong></td><td style="text-align:left;">1. Користувач відкриває сторінку конкретного користувача. <br> 2. Система надсилає запит <code>GET /api/user/:id</code> для отримання даних користувача. <br> 3. Система повертає інформацію про користувача (або повідомляє про його відсутність). <br> 4. Користувач переглядає профіль іншого користувача.</td></tr></tbody></table><table><thead><tr><th style="text-align:left;"><strong>ID:</strong></th><th style="text-align:left;"><strong>EditOwnProfile</strong></th></tr></thead><tbody><tr><td style="text-align:left;"><strong>НАЗВА:</strong></td><td style="text-align:left;">Редагування власного профілю</td></tr><tr><td style="text-align:left;"><strong>УЧАСНИКИ:</strong></td><td style="text-align:left;">Користувач, Система</td></tr><tr><td style="text-align:left;"><strong>ПЕРЕДУМОВИ:</strong></td><td style="text-align:left;">Користувач авторизований</td></tr><tr><td style="text-align:left;"><strong>РЕЗУЛЬТАТ:</strong></td><td style="text-align:left;">Дані користувача оновлено</td></tr><tr><td style="text-align:left;"><strong>ВИКЛЮЧНІ СИТУАЦІЇ:</strong></td><td style="text-align:left;"><strong>NotAuthenticated</strong> – Користувач не авторизований <br> <strong>UserNotFound</strong> – Користувача з таким ID не знайдено <br> <strong>NotAuthorized</strong> – Користувач не може змінювати чужі дані</td></tr><tr><td style="text-align:left;"><strong>ОСНОВНИЙ СЦЕНАРІЙ:</strong></td><td style="text-align:left;">1. Користувач відкриває форму редагування профілю. <br> 2. Вносить зміни в дані (наприклад, ім&#39;я або пароль). <br> 3. Система надсилає запит <code>PUT /api/user/:id</code>. <br> 4. Система оновлює дані користувача. <br> 5. Користувач отримує підтвердження про успішне оновлення.</td></tr></tbody></table><table><thead><tr><th style="text-align:left;"><strong>ID:</strong></th><th style="text-align:left;"><strong>DeleteOwnProfile</strong></th></tr></thead><tbody><tr><td style="text-align:left;"><strong>НАЗВА:</strong></td><td style="text-align:left;">Видалення власного профілю</td></tr><tr><td style="text-align:left;"><strong>УЧАСНИКИ:</strong></td><td style="text-align:left;">Користувач, Система</td></tr><tr><td style="text-align:left;"><strong>ПЕРЕДУМОВИ:</strong></td><td style="text-align:left;">Користувач авторизований</td></tr><tr><td style="text-align:left;"><strong>РЕЗУЛЬТАТ:</strong></td><td style="text-align:left;">Обліковий запис видалено</td></tr><tr><td style="text-align:left;"><strong>ВИКЛЮЧНІ СИТУАЦІЇ:</strong></td><td style="text-align:left;"><strong>NotAuthenticated</strong> – Користувач не авторизований <br> <strong>UserNotFound</strong> – Користувача з таким ID не знайдено</td></tr><tr><td style="text-align:left;"><strong>ОСНОВНИЙ СЦЕНАРІЙ:</strong></td><td style="text-align:left;">1. Користувач натискає кнопку &quot;Видалити акаунт&quot;. <br> 2. Система надсилає запит <code>DELETE /api/user/:id</code>. <br> 3. Система видаляє користувача з бази. <br> 4. Користувач отримує повідомлення про успішне видалення.</td></tr></tbody></table><h3 id="адміністратор" tabindex="-1"><a class="header-anchor" href="#адміністратор"><span>Адміністратор</span></a></h3><table><thead><tr><th style="text-align:left;"><strong>ID:</strong></th><th style="text-align:left;"><strong>DeleteAnyPost</strong></th></tr></thead><tbody><tr><td style="text-align:left;"><strong>НАЗВА:</strong></td><td style="text-align:left;">Видалення будь-якого поста</td></tr><tr><td style="text-align:left;"><strong>УЧАСНИКИ:</strong></td><td style="text-align:left;">Адміністратор, Система</td></tr><tr><td style="text-align:left;"><strong>ПЕРЕДУМОВИ:</strong></td><td style="text-align:left;">Адміністратор авторизований у системі</td></tr><tr><td style="text-align:left;"><strong>РЕЗУЛЬТАТ:</strong></td><td style="text-align:left;">Пост видалено з бази даних</td></tr><tr><td style="text-align:left;"><strong>ВИКЛЮЧНІ СИТУАЦІЇ:</strong></td><td style="text-align:left;"><strong>NotAuthenticated</strong> – Адміністратор не авторизований <br> <strong>PostNotFound</strong> – Пост із вказаним <code>id</code> не знайдено</td></tr><tr><td style="text-align:left;"><strong>ОСНОВНИЙ СЦЕНАРІЙ:</strong></td><td style="text-align:left;">1. Адміністратор заходить в панель модерації. <br> 2. Адміністратор вибирає пост, який потрібно видалити. <br> 3. Система перевіряє, що користувач має роль &quot;адміністратор&quot;. <br> 4. Система надсилає запит <code>DELETE /api/post/:id</code> для видалення поста. <br> 5. Система видаляє пост із бази даних і повертає підтвердження. <br> 6. Адміністратор отримує повідомлення про успішне видалення поста.</td></tr></tbody></table><table><thead><tr><th style="text-align:left;"><strong>ID:</strong></th><th style="text-align:left;"><strong>CreateUser</strong></th></tr></thead><tbody><tr><td style="text-align:left;"><strong>НАЗВА:</strong></td><td style="text-align:left;">Створення нового користувача</td></tr><tr><td style="text-align:left;"><strong>УЧАСНИКИ:</strong></td><td style="text-align:left;">Адміністратор, Система</td></tr><tr><td style="text-align:left;"><strong>ПЕРЕДУМОВИ:</strong></td><td style="text-align:left;">Адміністратор авторизований</td></tr><tr><td style="text-align:left;"><strong>РЕЗУЛЬТАТ:</strong></td><td style="text-align:left;">Новий користувач створений у базі</td></tr><tr><td style="text-align:left;"><strong>ВИКЛЮЧНІ СИТУАЦІЇ:</strong></td><td style="text-align:left;"><strong>UsernameExists</strong> – Користувач із таким ім&#39;ям вже існує</td></tr><tr><td style="text-align:left;"><strong>ОСНОВНИЙ СЦЕНАРІЙ:</strong></td><td style="text-align:left;">1. Адміністратор відкриває панель керування користувачами. <br> 2. Вводить дані нового користувача. <br> 3. Система створює нового користувача.</td></tr></tbody></table><table><thead><tr><th style="text-align:left;"><strong>ID:</strong></th><th style="text-align:left;"><strong>DeleteAnyUser</strong></th></tr></thead><tbody><tr><td style="text-align:left;"><strong>НАЗВА:</strong></td><td style="text-align:left;">Видалення користувача</td></tr><tr><td style="text-align:left;"><strong>УЧАСНИКИ:</strong></td><td style="text-align:left;">Адміністратор, Система</td></tr><tr><td style="text-align:left;"><strong>РЕЗУЛЬТАТ:</strong></td><td style="text-align:left;">Користувача видалено з бази</td></tr><tr><td style="text-align:left;"><strong>ВИКЛЮЧНІ СИТУАЦІЇ:</strong></td><td style="text-align:left;"><strong>NotAuthenticated</strong> – Адміністратор не авторизований <br> <strong>UserNotFound</strong> – Користувача з таким ID не знайдено</td></tr><tr><td style="text-align:left;"><strong>ОСНОВНИЙ СЦЕНАРІЙ:</strong></td><td style="text-align:left;">1. Адміністратор натискає кнопку &quot;Видалити акаунт&quot;. <br> 2. Система надсилає запит <code>DELETE /api/user/:id</code>. <br> 3. Система видаляє користувача з бази. <br> 4. Адміністратор отримує повідомлення про успішне видалення.</td></tr></tbody></table><h2 id="короткии-огляд-продукту" tabindex="-1"><a class="header-anchor" href="#короткии-огляд-продукту"><span>Короткий огляд продукту</span></a></h2><p><strong>PostIt!</strong> - це про зручність. Зручність керування та поширення ваших даних. Знаєте щось корисне і хочете поділитись цим зі світом? Ми вас почули! З нашим зручним та зрозумілим інтерфейсом ви з легкістю можете створювати, редагувати та видаляти власні пости, навіть якщо ви зовсім не знайомі з базами даних.</p><p><strong>Наша система здатна:</strong></p><ul><li>Авторизувати вас у ваш аккаунт, до якого будуть прив&#39;язані всі ваші пости.</li><li>Шифрувати ваші персональні дані щоб вони не потрапили до рук зловмисників.</li><li>Опрацьовувати ваші запити на зберігання/редагування/видалення ваших даних/постів з бази.</li><li>Створювати/Редагувати/Видаляти ваш аккаунт з системи.</li><li>Сповіщати вас про діяльність інших користувачів та їх внесок у базу.</li><li>Знаходити конкретний пост.</li><li>Надавати вам список усіх наявних постів/користувачів у базі.</li></ul><p><strong>При цьому певні можливості системи доступні лише певним категоріям користувачів:</strong></p><ul><li>Гість - здатний лише переглядати пости.</li><li>Користувач - створюють більшість наявних постів у системі, постійно відслідковують актуальність своїх даних та можуть перевіряти активність інших користувачів.</li><li>Адміністратор - мають майже абсолютну владу над системою, можуть керувати своїми та чужими постами а також аккаунтами інших користувачів.</li></ul><h2 id="функціональність" tabindex="-1"><a class="header-anchor" href="#функціональність"><span>Функціональність</span></a></h2><p>Система надає можливість користувачам взаємодіяти з платформою для публікації та управління постами. Вона забезпечує безпеку, надійність та контроль доступу , дозволяючи користувачам працювати з постами відповідно до своїх прав. Функціональність розділена на три рівні доступу: гість, користувач, адміністратор.</p><p><strong>Інтерфейс гостя:</strong></p><p>Гості мають доступ до обмежених можливостей системи, орієнтованих на перегляд контенту та реєстрацію. До їх функцій входять:</p><ul><li>Перегляд списку постів : Гість може відвідати сайт та переглянути доступні публікації, не маючи доступу до їх редагування або додавання.</li><li>Перегляд окремого посту : Гість може перейти на сторінку конкретного посту для детального перегляду його змісту, без можливості коментувати чи взаємодіяти з постом.</li><li>Реєстрація в системі і т.д.: Гість має можливість зареєструватися в системі, щоб отримати обліковий запис для доступу до додаткових функцій, таких як створення постів, редагування профілю тощо.</li></ul><p><strong>Інтерфейс користувача:</strong></p><p>Після реєстрації в системі та авторизації, користувачі отримують доступ до ширших можливостей для взаємодії з контентом та персоналізацією свого профілю. Користувачі можуть виконувати такі дії:</p><ul><li>Авторизація в системі : Користувач може увійти в систему, використовуючи свої облікові дані, щоб отримати доступ до захищених функцій, таких як створення та редагування постів.</li><li>Створення поста : Авторизований користувач може створювати нові пости, додавати заголовки та тексти, що публікуються в системі.</li><li>Редагування та видалення власних постів : Користувач може змінювати текст та інші елементи своїх постів, а також видаляти їх, якщо це необхідно.</li><li>Перегляд списку користувачів та їх профілів : Користувач може переглядати профілі інших користувачів, але не має доступу до редагування їх даних.</li><li>Редагування власного профілю : Користувач може змінювати інформацію у своєму профілі, включаючи ім&#39;я, пароль або інші персональні дані.</li><li>Видалення свого акаунта : Якщо користувач хоче, він може повністю видалити свій акаунт із системи, втративши всі дані, пов&#39;язані з ним.</li></ul><p><strong>Інтерфейс адміністратора:</strong></p><p>Адміністратори мають повний доступ до системи, що дозволяє їм керувати користувачами, постами та іншими аспектами сайту. Їхні можливості включають:</p><ul><li>Видалення будь-якого поста : Адміністратор може видаляти будь-який пост з бази даних незалежно від того, хто є його автором.</li><li>Управління користувачами : Адміністратор може створювати нових користувачів, переглядати інформацію про них та видаляти акаунти, якщо це необхідно. Це дає змогу підтримувати порядок серед користувачів та забезпечувати належну роботу системи.</li><li>Доступ до панелі адміністрування : Адміністратор має доступ до спеціальної панелі керування, через яку здійснюється управління постами, користувачами та іншими функціями системи. Таким чином, кожна роль має свій специфічний круг обов&#39;язків та можливостей у межах системи, що забезпечує ефективну роботу сайту.</li></ul><h2 id="практичність" tabindex="-1"><a class="header-anchor" href="#практичність"><span>Практичність</span></a></h2><p><strong>Зручна авторизація</strong></p><ul><li>Простий процес реєстрації та входу в систему з мінімумом кроків.</li><li>Використання токенів для збереження сесій, що дозволяє користувачам залишатися в системі без необхідності повторної авторизації.</li></ul><p><strong>Інтуїтивно зрозумілий інтерфейс</strong></p><ul><li>Чітка структура, розподілені функції для різних ролей користувачів, що дозволяє легко знаходити потрібну інформацію без перевантаження елементами.</li></ul><p><strong>Гнучкість у користуванні</strong></p><ul><li>Користувачі можуть редагувати та видаляти свої пости та профілі без стороннього втручання.</li><li>Адміністратори мають можливість керувати обліковими записами інших користувачів.</li></ul><p><strong>Автоматична обробка помилок</strong></p><ul><li>Система надає зрозумілі повідомлення про помилки, що дозволяє швидко виправити недоліки при введенні даних або доступі до функцій.</li></ul><p><strong>Логічна структура</strong></p><ul><li>Розподіл доступу залежно від ролей користувачів забезпечує ефективне управління та запобігає плутанині.</li></ul><p><strong>Простота інтеграції</strong></p><ul><li>API дозволяє без проблем інтегрувати систему з іншими сервісами чи додатками для розширення функціональності чи зовнішніх публікацій.</li></ul><h2 id="надіиність" tabindex="-1"><a class="header-anchor" href="#надіиність"><span>Надійність</span></a></h2><p><strong>Безпека даних :</strong></p><ul><li><p>Паролі користувачів кешуються перед зберіганням</p></li><li><p>Використовуються токені доступу для безпечної авторизації.</p></li></ul><p><strong>Контроль доступу :</strong></p><ul><li><p>Різні рівні доступу для гостей, користувачів та адміністраторів.</p></li><li><p>Перевірка прав доступу до виконання дій.</p></li></ul><p><strong>Обробка помилок :</strong></p><ul><li><p>Чіткі помилки для некоректних даних (наприклад, неправильний логін чи пароль).</p></li><li><p>Оповіщення про помилки введення.</p></li></ul><p><strong>Захист від атак :</strong></p><ul><li><p>Використання захищених запитів для запобігання SQL-ін&#39;єкціям.</p></li><li><p>Обмеження кількості запитів від одного користувача для захисту від атак.</p></li></ul><p><strong>Резервне копіювання :</strong></p><ul><li><p>Регулярне резервне копіювання даних.</p></li><li><p>Можливість швидкого відновлення системи у разі збоїв.</p></li></ul><h2 id="продуктивність" tabindex="-1"><a class="header-anchor" href="#продуктивність"><span>Продуктивність</span></a></h2><p>Продуктивність системи визначається її здатністю швидко обробляти запити без перевантаження серверів.</p><p><strong>Основні аспекти:</strong></p><ul><li><p>Швидкі API-запити : Оптимізовані запити до бази даних дозволяють швидко отримувати потрібну інформацію.</p></li><li><p>Кешування : Часто використовувані дані зберігаються на деяку годину для швидкого доступу, що зменшує навантаження на сервер.</p></li><li><p>Масштабованість : Система може справлятися з високим навантаженням, додаючи ресурси за потреби.</p></li><li><p>Мінімізація часу відгуку : Швидка реакція на запити забезпечує користувачам зручний досвід без затримок.</p></li><li><p>Ефективне використання ресурсів : Всі запити обробляються ефективно, що знижує лишнє навантаження на систему.</p></li></ul><h2 id="експлуатаціина-придатність" tabindex="-1"><a class="header-anchor" href="#експлуатаціина-придатність"><span>Експлуатаційна придатність</span></a></h2><ul><li><p>Легкий у використанні інтерфейс робить систему: Інтерфейс системи інтуїтивно зрозумілий для всіх користувачів Гості можуть швидко реєструватися та переглядати пости, а авторизовані користувачі — створювати, редагувати та удаляти пости, що робить систему доступною навіть для тих, хто не має технічних знань.</p></li><li><p>Зручне адміністрування : Адміністратори мають повний доступ до всіх функцій системи через спеціальну панель управління. Вони можуть керувати користувачами, постами та навіть видаляти контент за потребою. Це дозволяє підтримувати порядок та ефективно реагувати на проблеми.</p></li><li><p>Гнучкість у налаштуваннях : Завдяки модульній архітектурі система може легко адаптуватися до зміни вимог або нових функцій. Це дозволяє швидко вносити зміни без перерв у роботі сервісу. Наприклад, можна додавати нові ролі або змінювати права доступу без значних змін в основному коді.</p></li><li><p>Простота інтеграції : Система підтримує інтеграцію через API, що дозволяє легко підключити її до інших платформ або сервісів, якщо це необхідно. Це дає можливість розширювати функціональність чи підключати сторонні інструменти для кращої аналітики чи управління.</p></li><li><p>Стабільність під навантаженням : Архітектура системи забезпечує стабільну роботу навіть при високих навантаженнях, коли на платформі одночасно перебуває багато користувачів.</p></li></ul>',74);function N(U,F){const e=s("ExternalLinkIcon");return o(),d("div",null,[g,t("p",null,[i,t("a",h,[y,l(e)])]),t("p",null,[f,t("a",p,[D,l(e)])]),t("p",null,[x,t("a",c,[b,l(e)])]),t("p",null,[u,t("a",B,[m,l(e)])]),t("p",null,[k,t("a",_,[E,l(e)])]),t("p",null,[v,t("a",A,[I,l(e)])]),P])}const q=n(a,[["render",N],["__file","stakeholders-needs.html.vue"]]),C=JSON.parse('{"path":"/requirements/stakeholders-needs.html","title":"Запити зацікавлених осіб","lang":"en-US","frontmatter":{"description":"Запити зацікавлених осіб Вступ Система управління відкритими даними – це програмне рішення, що забезпечує ефективне керування, доступ до публічної інформації та її безпечне збер...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/IO-33_DB_gr2/requirements/stakeholders-needs.html"}],["meta",{"property":"og:site_name","content":"PostIt!"}],["meta",{"property":"og:title","content":"Запити зацікавлених осіб"}],["meta",{"property":"og:description","content":"Запити зацікавлених осіб Вступ Система управління відкритими даними – це програмне рішення, що забезпечує ефективне керування, доступ до публічної інформації та її безпечне збер..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-04-24T19:21:21.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-24T19:21:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Запити зацікавлених осіб\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-04-24T19:21:21.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Вступ","slug":"вступ","link":"#вступ","children":[{"level":3,"title":"Мета","slug":"мета","link":"#мета","children":[]},{"level":3,"title":"Контекст","slug":"контекст","link":"#контекст","children":[]},{"level":3,"title":"Основні визначення та скорочення","slug":"основні-визначення-та-скорочення","link":"#основні-визначення-та-скорочення","children":[]},{"level":3,"title":"Посилання","slug":"посилання","link":"#посилання","children":[]}]},{"level":2,"title":"Короткий зміст","slug":"короткии-зміст","link":"#короткии-зміст","children":[]},{"level":2,"title":"Характеристика ділових процесів","slug":"характеристика-ділових-процесів","link":"#характеристика-ділових-процесів","children":[{"level":3,"title":"Гість","slug":"гість","link":"#гість","children":[]},{"level":3,"title":"Користувач","slug":"користувач","link":"#користувач","children":[]},{"level":3,"title":"Адміністратор","slug":"адміністратор","link":"#адміністратор","children":[]}]},{"level":2,"title":"Короткий огляд продукту","slug":"короткии-огляд-продукту","link":"#короткии-огляд-продукту","children":[]},{"level":2,"title":"Функціональність","slug":"функціональність","link":"#функціональність","children":[]},{"level":2,"title":"Практичність","slug":"практичність","link":"#практичність","children":[]},{"level":2,"title":"Надійність","slug":"надіиність","link":"#надіиність","children":[]},{"level":2,"title":"Продуктивність","slug":"продуктивність","link":"#продуктивність","children":[]},{"level":2,"title":"Експлуатаційна придатність","slug":"експлуатаціина-придатність","link":"#експлуатаціина-придатність","children":[]}],"git":{"createdTime":1739633153000,"updatedTime":1745522481000,"contributors":[{"name":"AlexandraMoroz33","email":"moroz.alexandra@lll.kpi.ua","commits":3},{"name":"den47k","email":"danyildanyilov@gmail.com","commits":3},{"name":"neuutaa","email":"zamkovij.vitalik@lll.kpi.ua","commits":2},{"name":"T3gi","email":"tytok.volodymyr@lll.kpi.ua","commits":1},{"name":"user","email":"pakulyak.sasha@lll.kpi.ua","commits":1},{"name":"vladyslav-savchenko-cs","email":"vladyslav.savchenko@corpsoft.io","commits":1}]},"readingTime":{"minutes":8.69,"words":2608},"filePathRelative":"requirements/stakeholders-needs.md","localizedDate":"February 15, 2025","autoDesc":true}');export{q as comp,C as data};
